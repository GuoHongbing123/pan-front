{"remainingRequest":"E:\\vue\\test\\node_modules\\thread-loader\\dist\\cjs.js!E:\\vue\\test\\node_modules\\babel-loader\\lib\\index.js!E:\\vue\\test\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\vue\\test\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vue\\test\\node_modules\\element-ui\\packages\\image\\src\\image-viewer.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\vue\\test\\node_modules\\element-ui\\packages\\image\\src\\image-viewer.vue","mtime":499162500000},{"path":"E:\\vue\\test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue\\test\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue\\test\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\vue\\test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue\\test\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}