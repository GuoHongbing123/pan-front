{"remainingRequest":"E:\\vuedemo\\test\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vuedemo\\test\\src\\components\\Upload.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\vuedemo\\test\\src\\components\\Upload.vue","mtime":1638091785163},{"path":"E:\\vuedemo\\test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vuedemo\\test\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\vuedemo\\test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vuedemo\\test\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBoZXhfbWQ1IH0gZnJvbSAiLi4vdXRpbHMvbWQ1IjsNCmltcG9ydCBUb29sIGZyb20gJy4uL3V0aWxzL3Rvb2wnOw0KaW1wb3J0IHsgY2hlY2tGaWxlS2V5IH1mcm9tICIuLi9hcGkvdXBsb2FkIjsNCmltcG9ydCB7IHNoYXJkVXBsb2FkIH0gZnJvbSAiLi4vYXBpL3VwbG9hZCI7DQpleHBvcnQgZGVmYXVsdCB7DQogICAgZGF0YSgpew0KICAgICAgICByZXR1cm57DQogICAgICAgICAgICBsaXN0OltdDQogICAgICAgIH0NCiAgICB9LA0KICAgIG1ldGhvZHM6ew0KICAgICAgICBoYW5kbGVVcGxvYWQoZmlsZXMpew0KICAgICAgICAgICAgZm9yKGxldCBpPTA7aTxmaWxlcy5sZW5ndGg7aSsrKXsNCiAgICAgICAgICAgICAgICB0aGlzLmxpc3QucHVzaCh7DQogICAgICAgICAgICAgICAgICAgIG5hbWU6ZmlsZXNbaV0ubmFtZSwNCiAgICAgICAgICAgICAgICAgICAgcHJvY2VzczowLA0KICAgICAgICAgICAgICAgICAgICBzdGF0dXM6MCwgIC8vMCDlh4blpIfkuK0gMSDmo4DpqoxNRDVLZXkgMiDkuIrkvKDkuK0gMyDlt7LkuIrkvKAgNCDnp5LkvKDmiJDlip8gNSDlt7Llj5bmtoggNiDlt7LlrZjlnKgNCiAgICAgICAgICAgICAgICAgICAgZmlsZTpmaWxlc1tpXQ0KICAgICAgICAgICAgICAgIH0pDQogICAgICAgICAgICAgICAgdGhpcy5zdGFydFVwbG9hZChpKQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICBzdGFydFVwbG9hZChpbmRleCl7DQogICAgICAgICAgICAvKm1kNS0+5ZCO56uvIOWIpOaWrei/meS4quaWh+S7tuaYr+WQpuWtmOWcqCBrZXkNCiAgICAgICAgICAgIOWtmOWcqOeahOivnSDnp5LkvKANCiAgICAgICAgICAgIOS4jeWtmOWcqOeahOivnSDliIbniYfkuIrkvKAtPiDlsIbmlofku7bovazljJbmiJBiYXNlNjQg5YiH5Ymy6YCQ5Liq6LCD5o6l5Y+j5LiK5LygDQogICAgICAgICAgICDlpoLmnpzkuIrkvKDpgJTkuK3kuK3mlq0gIOmCo+S5iOWGjeasoeS4iuS8oOivpeaWh+S7tiDmlq3ngrnnu63kvKANCiAgICAgICAgICAgICovDQogICAgICAgICAgICBpZih0aGlzLmxpc3RbaW5kZXhdLnN0YXR1cz09PTApew0KICAgICAgICAgICAgICAgIGxldCBmaWxlPXRoaXMubGlzdFtpbmRleF0NCiAgICAgICAgICAgICAgICBmaWxlLnN0YXR1cz0xDQogICAgICAgICAgICAgICAgbGV0IGtleT10aGlzLmdlbktleShmaWxlKQ0KICAgICAgICAgICAgICAgIGxldCBzaGFyZFNpemU9MC41KjEwMjQqMTAyNCAvL+S7pTAuNU0g5Li65LiA5Liq5YiG54mHDQogICAgICAgICAgICAgICAgbGV0IHNpemU9ZmlsZS5maWxlLnNpemUNCiAgICAgICAgICAgICAgICBsZXQgc2hhcmRJbmRleD0xDQogICAgICAgICAgICAgICAgbGV0IHNoYXJkVG90YWw9TWF0aC5jZWlsKHNpemUvc2hhcmRTaXplKQ0KICAgICAgICAgICAgICAgIGxldCBzdWZmaXg9ZmlsZS5uYW1lLnN1YnN0cmluZyhmaWxlLm5hbWUubGFzdEluZGV4T2YoIi4iKSsxLGZpbGUubmFtZS5sZW5ndGgpLnRvTG93ZXJDYXNlKCkNCiAgICAgICAgICAgICAgICBsZXQgcGFyYW09ew0KICAgICAgICAgICAgICAgICAgICBzaGFyZEluZGV4LA0KICAgICAgICAgICAgICAgICAgICBzaGFyZFNpemUsDQogICAgICAgICAgICAgICAgICAgIHNoYXJkVG90YWwsDQogICAgICAgICAgICAgICAgICAgICduYW1lJzpmaWxlLm5hbWUsDQogICAgICAgICAgICAgICAgICAgIHN1ZmZpeCwNCiAgICAgICAgICAgICAgICAgICAga2V5LA0KICAgICAgICAgICAgICAgICAgICBpbmRleCwNCiAgICAgICAgICAgICAgICAgICAgc2l6ZSwNCiAgICAgICAgICAgICAgICAgICAgZm9sZGVySWQ6dGhpcy4kcm91dGUucXVlcnkuaWR8fDANCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgdGhpcy5jaGVjayhwYXJhbSkNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgZ2VuS2V5KGZpbGUpew0KICAgICAgICAgICAgbGV0IGtleT1oZXhfbWQ1KGZpbGUubmFtZStmaWxlLnNpemUrZmlsZS50eXBlKQ0KICAgICAgICAgICAgbGV0IGtleTEwPXBhcnNlSW50KGtleSwxNikNCiAgICAgICAgICAgIHJldHVybiBUb29sLl8xMHRvNjIoa2V5MTApDQogICAgICAgIH0sDQogICAgICAgIGNoZWNrKHBhcmFtKXsNCiAgICAgICAgICAgIGNoZWNrRmlsZUtleSh7DQogICAgICAgICAgICAgICAgbmFtZTpwYXJhbS5uYW1lLA0KICAgICAgICAgICAgICAgIGZvcmRlcklkOnBhcmFtLmZvcmRlcklkLA0KICAgICAgICAgICAgICAgIGtleTpwYXJhbS5rZXkNCiAgICAgICAgICAgIH0pLnRoZW4ocmVzPT57DQogICAgICAgICAgICAgICAgbGV0IGN1bnJlbkZpbGU9dGhpcy5saXN0W3BhcmFtLmluZGV4XQ0KICAgICAgICAgICAgICAgIC8vIDAg56eS5Lyg5oiQ5Yqf77yI5a2Y5Zyo6K+l5paH5Lu277yJMjAyIOS5i+WJjeacquS4iuS8oOWujOaVtCDpnIDopoHmlq3ngrnnu63kvKAgIDQwNCDmnKrlrZjlnKjor6Xmlofku7YNCiAgICAgICAgICAgICAgICBzd2l0Y2gocmVzLmNvZGUpew0KICAgICAgICAgICAgICAgICAgICBjYXNlIDA6DQogICAgICAgICAgICAgICAgICAgICAgICBjdW5yZW5GaWxlLnN0YXR1cz00DQogICAgICAgICAgICAgICAgICAgICAgICBjdW5yZW5GaWxlLnByb2Nlc3M9PTEwMA0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kYnVzLiRlbWl0KCdnZXRsaXN0JykNCiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICAgICAgICAgICAgICBjYXNlIDIwMjoNCiAgICAgICAgICAgICAgICAgICAgICAgIGN1bnJlbkZpbGUuc3RhdHVzPTINCiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtLnNoYXJkSW5kZXg9cmVzLmRhdGEuc2hhcmRJbmRleA0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zaGFyZFVwbG9hZChwYXJhbSkNCiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICAgICAgICAgICAgICBjYXNlIDQwNDoNCiAgICAgICAgICAgICAgICAgICAgICAgIGN1bnJlbkZpbGUuc3RhdHVzPTINCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2hhcmRVcGxvYWQocGFyYW0pDQogICAgICAgICAgICAgICAgICAgICAgICBicmVhazsNCiAgICAgICAgICAgICAgICAgICAgZGVmYXVsdDoNCiAgICAgICAgICAgICAgICAgICAgICAgIGN1bnJlbkZpbGUuc3RhdHVzPTUNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IocmVzLm1zZykNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9KQ0KICAgICAgICB9LA0KICAgICAgICBzaGFyZFVwbG9hZChwYXJhbSl7DQogICAgICAgICAgICBsZXQgc2hhcmRJbmRleD1wYXJhbS5zaGFyZEluZGV4DQogICAgICAgICAgICBsZXQgc2hhcmRUb3RhbD1wYXJhbS5zaGFyZFRvdGFsDQogICAgICAgICAgICBsZXQgc2hhcmRTaXplPXBhcmFtLnNoYXJkU2l6ZQ0KICAgICAgICAgICAgbGV0IGZpbGVTaGFyZD10aGlzLmdldEZpbGVTaGFyZChzaGFyZEluZGV4LHNoYXJkU2l6ZSxwYXJhbS5pbmRleCkNCiAgICAgICAgICAgIGxldCBmaWxlUmVhZGVyPSBuZXcgRmlsZVJlYWRlcigpDQogICAgICAgICAgICBmaWxlUmVhZGVyLm9ubG9hZD0oZSk9PnsNCiAgICAgICAgICAgICAgICBwYXJhbS5zaGFyZD1lLnRhcmdldC5yZXN1bHQNCiAgICAgICAgICAgICAgICBzaGFyZFVwbG9hZChwYXJhbSkudGhlbihyZXM9PnsNCiAgICAgICAgICAgICAgICAgICAgaWYocmVzLmNvZGU9PT0wKXsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmKHNoYXJkSW5kZXg8c2hhcmRUb3RhbCl7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFyYW0uc2hhcmRJbmRleCs9MQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2hhcmRVcGxvYWQocGFyYW0pDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5saXN0W3BhcmFtLmluZGV4XS5wcm9jZXNzPXBhcnNlSW50KCgoc2hhcmRJbmRleC0xKS9zaGFyZFRvdGFsKjEwMCkudG9GaXhlZCgyKSkNCiAgICAgICAgICAgICAgICAgICAgICAgIH1lbHNlew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubGlzdFtwYXJhbS5pbmRleF0uc3RhdHVzPTMNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmxpc3QucHJvY2Vzcz0xMDANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRidXMuJGVtaXQoJ2dldGxpc3QnKQ0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSkNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgZmlsZVJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGVTaGFyZCkNCiAgICAgICAgfSwNCiAgICAgICAgZ2V0RmlsZVNoYXJkKHNoYXJkSW5kZXgsc2hhcmRTaXplLGluZGV4KXsNCiAgICAgICAgICAgIGxldCBmaWxlPXRoaXMubGlzdFtpbmRleF0uZmlsZQ0KICAgICAgICAgICAgbGV0IHN0YXJ0PShzaGFyZEluZGV4LTEpKnNoYXJkU2l6ZQ0KICAgICAgICAgICAgbGV0IGVuZD1NYXRoLm1pbihmaWxlLnNpemUsc3RhcnQrc2hhcmRTaXplKQ0KICAgICAgICAgICAgcmV0dXJuIGZpbGUuc2xpY2Uoc3RhcnQsZW5kKQ0KICAgICAgICB9DQogICAgfQ0KfQ0K"},{"version":3,"sources":["Upload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAifile":"Upload.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <el-card class=\"box-card\">\r\n      <div slot=\"header\" class=\"clearfix\">\r\n          <span style=\"font-size:16px\">上传文件</span>\r\n          <el-button style=\"float:right; padding: 3px 0\" type=\"text\">关闭</el-button>\r\n      </div>\r\n      <div class=\"file-list\">\r\n        <div class=\"file-item\" v-for=\"(item,index) in list\" :key=\"index\">\r\n            <div class=\"name\">{{item.name}}</div>\r\n            <el-progress style=\"width:400px;margin:0 20px\" :text-inside=\"true\" :stroke-width=\"26\" :percentage=\"item.process\"></el-progress>\r\n            <div class=\"status\">{{['等待中','检验md5Key','上传中','上传成功','秒传成功','已取消','已存在'][item.status]}}</div>\r\n        </div>\r\n      </div>\r\n  </el-card>\r\n</template>\r\n\r\n<script>\r\nimport { hex_md5 } from \"../utils/md5\";\r\nimport Tool from '../utils/tool';\r\nimport { checkFileKey }from \"../api/upload\";\r\nimport { shardUpload } from \"../api/upload\";\r\nexport default {\r\n    data(){\r\n        return{\r\n            list:[]\r\n        }\r\n    },\r\n    methods:{\r\n        handleUpload(files){\r\n            for(let i=0;i<files.length;i++){\r\n                this.list.push({\r\n                    name:files[i].name,\r\n                    process:0,\r\n                    status:0,  //0 准备中 1 检验MD5Key 2 上传中 3 已上传 4 秒传成功 5 已取消 6 已存在\r\n                    file:files[i]\r\n                })\r\n                this.startUpload(i)\r\n            }\r\n        },\r\n        startUpload(index){\r\n            /*md5->后端 判断这个文件是否存在 key\r\n            存在的话 秒传\r\n            不存在的话 分片上传-> 将文件转化成base64 切割逐个调接口上传\r\n            如果上传途中中断  那么再次上传该文件 断点续传\r\n            */\r\n            if(this.list[index].status===0){\r\n                let file=this.list[index]\r\n                file.status=1\r\n                let key=this.genKey(file)\r\n                let shardSize=0.5*1024*1024 //以0.5M 为一个分片\r\n                let size=file.file.size\r\n                let shardIndex=1\r\n                let shardTotal=Math.ceil(size/shardSize)\r\n                let suffix=file.name.substring(file.name.lastIndexOf(\".\")+1,file.name.length).toLowerCase()\r\n                let param={\r\n                    shardIndex,\r\n                    shardSize,\r\n                    shardTotal,\r\n                    'name':file.name,\r\n                    suffix,\r\n                    key,\r\n                    index,\r\n                    size,\r\n                    folderId:this.$route.query.id||0\r\n                }\r\n                this.check(param)\r\n            }\r\n        },\r\n        genKey(file){\r\n            let key=hex_md5(file.name+file.size+file.type)\r\n            let key10=parseInt(key,16)\r\n            return Tool._10to62(key10)\r\n        },\r\n        check(param){\r\n            checkFileKey({\r\n                name:param.name,\r\n                forderId:param.forderId,\r\n                key:param.key\r\n            }).then(res=>{\r\n                let cunrenFile=this.list[param.index]\r\n                // 0 秒传成功（存在该文件）202 之前未上传完整 需要断点续传  404 未存在该文件\r\n                switch(res.code){\r\n                    case 0:\r\n                        cunrenFile.status=4\r\n                        cunrenFile.process==100\r\n                        this.$bus.$emit('getlist')\r\n                        break;\r\n                    case 202:\r\n                        cunrenFile.status=2\r\n                        param.shardIndex=res.data.shardIndex\r\n                        this.shardUpload(param)\r\n                        break;\r\n                    case 404:\r\n                        cunrenFile.status=2\r\n                        this.shardUpload(param)\r\n                        break;\r\n                    default:\r\n                        cunrenFile.status=5\r\n                        this.$message.error(res.msg)\r\n                }\r\n            })\r\n        },\r\n        shardUpload(param){\r\n            let shardIndex=param.shardIndex\r\n            let shardTotal=param.shardTotal\r\n            let shardSize=param.shardSize\r\n            let fileShard=this.getFileShard(shardIndex,shardSize,param.index)\r\n            let fileReader= new FileReader()\r\n            fileReader.onload=(e)=>{\r\n                param.shard=e.target.result\r\n                shardUpload(param).then(res=>{\r\n                    if(res.code===0){\r\n                        if(shardIndex<shardTotal){\r\n                            param.shardIndex+=1\r\n                            this.shardUpload(param)\r\n                            this.list[param.index].process=parseInt(((shardIndex-1)/shardTotal*100).toFixed(2))\r\n                        }else{\r\n                            this.list[param.index].status=3\r\n                            this.list.process=100\r\n                            this.$bus.$emit('getlist')\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n           fileReader.readAsDataURL(fileShard)\r\n        },\r\n        getFileShard(shardIndex,shardSize,index){\r\n            let file=this.list[index].file\r\n            let start=(shardIndex-1)*shardSize\r\n            let end=Math.min(file.size,start+shardSize)\r\n            return file.slice(start,end)\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.box-card{\r\n    width: 600px;\r\n    height: 400px;\r\n    position: fixed;\r\n    right: 20px;\r\n    bottom: 20px;\r\n    .file-list{\r\n        .file-item{\r\n            display: flex;\r\n            align-items: center;\r\n            .name{\r\n                font-size:16px;\r\n                flex: 1;\r\n                overflow: hidden;\r\n                text-overflow:ellipsis ;\r\n                white-space: nowrap;\r\n            }\r\n            .status{\r\n                margin-left: auto;\r\n            }\r\n        }\r\n    }\r\n}\r\n</style>"]}]}