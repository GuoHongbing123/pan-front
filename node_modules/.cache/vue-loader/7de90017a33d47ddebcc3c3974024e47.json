{"remainingRequest":"E:\\workspace\\pan-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\workspace\\pan-front\\src\\views\\Home.vue?vue&type=style&index=0&id=fae5bece&lang=scss&scoped=true&","dependencies":[{"path":"E:\\workspace\\pan-front\\src\\views\\Home.vue","mtime":1639081480726},{"path":"E:\\workspace\\pan-front\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\pan-front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\workspace\\pan-front\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\workspace\\pan-front\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\pan-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\pan-front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYnJlYWRjcnVtYi1ib3h7CiAgZGlzcGxheTogZmxleDsKfQouY2xpY2thYmxlewogIGZvbnQtd2VpZ2h0OiBib2xkOwogIGN1cnNvcjogcG9pbnRlcjsKfQoubGlzdHsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtd3JhcDp3cmFwOwp9Cg=="},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"home\">\n    <div class=\"breadcrumb-box\">\n      <div class=\"breadcrumb-item\" v-for=\"(item,index) in bread\" :key=\"item.id\">\n        <i v-if=\"index!==0\" class=\"el-icon-arrow-right\"></i>\n        <span @click=\"handleBread(item.id,index)\" :class=\"{'clickable': index!==bread.length-1}\">{{item.realName}}</span>\n      </div>\n    </div>\n    <div class=\"list\">\n      <file \n        @renameSuccess=\"rename\" \n        @click.native=\"clickHander(item)\" \n        @move=\"handleMove\"\n        @share=\"handleShare\" \n        draggable=\"true\"\n        @dragover.native=\"(e) => allowDrop(e, item)\"\n        @dragstart.native=\"(e) => dragStart(e,item)\"\n        @drop.native=\"(e) => drop(e,item)\"\n        :info=\"item\" \n        v-for=\"item in list\" \n        :key=\"item.id\"></file>\n    </div>\n\t  <div><el-image-viewer v-if=\"showViewer\" :on-close=\"closeViewer\" :url-list=\"[this.imageUrl]\" /></div>\n    <video-player @close=\"videoPlayerShow = false\" v-if=\"videoPlayerShow\" ref=\"videoPlayerRef\"></video-player>\n    <audio-player @close=\"audioPlayerShow = false\" v-if=\"audioPlayerShow\" ref=\"audioPlayerRef\"></audio-player>\n    <select-folder @moveSuccess=\"selectShow=false\" v-if=\"selectShow\" ref=\"select\"></select-folder>\n    <share-modal ref=\"share\" v-if=\"shareShow\"></share-modal>\n  </div>\n</template>\n\n<script>\nimport { getFileById,getLocation,moveFolder } from \"../api/folder\";\nimport { moveFile, getDownloadPath } from \"../api/file\";\nimport  File  from \"../components/File.vue\";\nimport VideoPlayer from \"../components/VideoPlayer\";\nimport AudioPlayer from \"../components/AudioPlayer\";\nimport SelectFolder from \"../components/SelectFolder.vue\";\nimport ShareModal from \"../components/ShareModal.vue\";\nimport fileType from \"../const/fileType\"\nimport { staticUrl } from \"../const/index\";\nimport ElImageViewer from 'element-ui/packages/image/src/image-viewer'\nexport default {\n  name: 'Home',\n  data() {\n    return{\n      imageUrl:'',\n      list:[],\n      bread:[],\n      currentFolderId:'',\n      selectShow:false,\n      shareShow:false,\n      showViewer:false,\n      videoPlayerShow: false,\n      audioPlayerShow: false,\n    }\n  },\n  components:{\n    File,\n    SelectFolder,\n    ShareModal,\n    VideoPlayer,\n    AudioPlayer,\n    ElImageViewer\n  },\n  watch:{\n    $route(newVal){\n      this.currentFolderId=newVal.query.id\n      this.getFiles()\n      this.setLocation()\n    }\n  },\n  methods:{\n    dragStart(e, item){\n      e.dataTransfer.effectAllowed = 'move'\n      e.dataTransfer.setData('id', item.id)\n      e.dataTransfer.setData('type', item.type)\n    },\n    drop(e,item){\n      this.move({\n        type:e.dataTransfer.getData('type'),\n        id:e.dataTransfer.getData('id'),\n        pid:item.id,\n        folderId:item.id\n      })\n    },\n    allowDrop(e, item){\n      if(item.type === '2'){\n        e.preventDefault()\n      }\n    },\n    async move(data){\n      let res=data.type === '2' ? await moveFolder(data) : await moveFile(data)\n      if(res.code === 0){\n        this.$message.success('移动成功')\n        this.getFiles()\n      }else{\n        this.$message.error(res.msg);\n      }\n    },\n    //video auvio 使用\n    videoHandler(item) {\n      this.getPath(item).then(data => {\n        this.videoPlayerShow = true\n        this.$nextTick(() => {\n          this.$refs.videoPlayerRef.dialogShow = true\n          this.$refs.videoPlayerRef.init({\n            videoSrc: staticUrl + data,\n            title: item.realName\n          })\n        })\n      })\n    },\n    audioHandler(item) {\n      this.getPath(item).then(data => {\n        this.audioPlayerShow = true\n        this.$nextTick(() => {\n          this.$refs.audioPlayerRef.dialogShow = true\n          this.$refs.audioPlayerRef.init({\n            audioSrc: staticUrl + data,\n            title: item.realName\n          })\n        })\n      })\n    },\n    closeViewer() {\n             this.showViewer = false\n    },\n    imageHandler(item){\n      this.getPath(item).then(data =>{\n        this.showViewer = true\n        let list = `${staticUrl}${data}`\n        this.imageUrl = list\n                // if(res.code === 0){\n                //     let type=fileType[this.info.suffix]\n                //     if(type === 'image'){\n                //         let data = `${staticUrl}/${res.data.dlLink}`\n                //         this.url=data\n                //         this.showViewer=true\n                //     }\n                // }\n       })\n    },\n    getPath(item) {\n      return new Promise((resolve, reject) => {\n        getDownloadPath(item.id,item.type).then(res => {\n          if (res.code === 0) {\n            resolve(res.data.dlLink)\n          } else {\n            this.$message.error(res.msg)\n            reject()\n          }\n        })\n      })\n    },\n\n    handleMove(info){\n      this.selectShow=true\n      this.$nextTick(() => {\n        this.$refs.select.dialogVisible = true\n        this.$refs.select.init(info)\n      })\n    },\n    handleShare(info){\n      this.shareShow = true\n      this.$nextTick(() => {\n        this.$refs.share.visible=true\n        this.$refs.share.init(info)\n      })\n    },\n    handleBread(id,index){\n      if(index!==this.bread.length-1){\n        this.$router.push('/home?id='+id)\n      }\n    },\n    setLocation(){\n      if(this.currentFolderId){\n        getLocation(this.currentFolderId).then(res=>{\n          this.bread=res.data.reverse()\n          this.bread[0].realName='首页'\n      })\n      }else{\n        this.bread.splice(0,this.bread.length)\n      }\n      \n    },\n    rename(id,newName){\n      let index=this.list.findIndex(item=>{\n        return item.id == id\n      })\n      this.list[index].realName = newName\n    },\n    getFiles(){\n      getFileById(this.currentFolderId).then((res)=>{\n        this.list=[...res.data.folder,...res.data.file]\n      })\n    },\n    clickHander(item){\n      if (item.type === '1') {\n        if (typeof((this[fileType[item.suffix] + 'Handler'])) === 'function') {\n          this[fileType[item.suffix] + 'Handler'](item)\n\n        } else if(['txt','word','excel','ppt'].includes(fileType[item.suffix])){\n          this.checkOffice(item)\n        } \n      }else {\n        this.$router.push({path: '/home?id=' + item.id})\n     }\n    },\n    checkOffice(item) {\n      this.getPath(item).then(data => {\n        let link = `${staticUrl}${data}`\n        let officeUrl = 'http://view.officeapps.live.com/op/view.aspx?src='+link\n        window.open(officeUrl,\"_blank\")\n      })\n    }\n  },\n  mounted(){\n    this.getFiles()\n    if(this.$route.query.id){\n      this.currentFolderId = this.$route.query.id\n      this.setLocation()\n    }\n    this.$bus.$on('getlist',this.getFiles)\n  }\n}\n</script>\n<style lang=\"scss\" scoped>\n.breadcrumb-box{\n  display: flex;\n}\n.clickable{\n  font-weight: bold;\n  cursor: pointer;\n}\n.list{\n  display: flex;\n  flex-wrap:wrap;\n}\n</style>"]}]}